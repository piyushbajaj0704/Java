class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), k, n, 1);
        return result;
    }
    
    public void backtrack(List<List<Integer>> result, List<Integer> temp, 
                int k, int n, int start) {
        if(temp.size() == k && n == 0) 
            result.add(new ArrayList<>(temp));
        
        if(temp.size() > k)  return;
            
        for(int i = start; i <= 9; i++) {
            temp.add(i);
            backtrack(result, temp, k, n-i, i+1);
            temp.remove(temp.size()-1);
        }
     }
}
